let activities = [];
let selectedTags = [];

// Define categories for display only
const categories = ["TYPE", "GENRE", "MISC"];

async function loadActivities() {
  try {
    const response = await fetch("activities.json");
    activities = await response.json();
    generateFilters();
    displayActivities(activities);
  } catch (err) {
    console.error("Failed to load activities:", err);
  }
}

function normalizeTag(tag) {
  return tag.trim().toUpperCase().replace(/\s+/g, "_");
}

// Generate buttons for all tags under their category headings
function generateFilters() {
  const tagContainer = document.getElementById("tagFilters");
  tagContainer.innerHTML = "";

  categories.forEach(cat => {
    // Get unique tags in this category
    const tagSet = new Set();
    activities.forEach(a => {
      if (a[cat]) tagSet.add(a[cat]);
    });

    if (tagSet.size === 0) return;

    // Category heading
    const heading = document.createElement("div");
    heading.className = "filter-category";
    const h4 = document.createElement("h4");
    h4.textContent = cat.charAt(0) + cat.slice(1).toLowerCase();
    heading.appendChild(h4);
    tagContainer.appendChild(heading);

    // Buttons
    const group = document.createElement("div");
    group.className = "filter-group";

    tagSet.forEach(tag => {
      const btn = document.createElement("button");
      btn.textContent = tag;
      btn.addEventListener("click", () => {
        const normalized = normalizeTag(tag);
        const index = selectedTags.indexOf(normalized);
        if (index > -1) {
          selectedTags.splice(index, 1);
          btn.classList.remove("selected");
        } else {
          selectedTags.push(normalizeTag(tag));
          btn.classList.add("selected");
        }
        filterActivities();
      });
      group.appendChild(btn);
    });

    tagContainer.appendChild(group);
  });
}

function filterActivities() {
  const searchInput = document.getElementById("searchInput").value.toLowerCase();

  const filtered = activities.filter(a => {
    // Match search
    const matchesSearch =
      a["Activity Name"].toLowerCase().includes(searchInput) ||
      categories.some(cat => a[cat] && a[cat].toLowerCase().includes(searchInput));

    // Match selected tags
    const matchesTags =
      selectedTags.length === 0 ||
      selectedTags.every(tag =>
        categories.some(cat => a[cat] && normalizeTag(a[cat]) === tag)
      );

    return matchesSearch && matchesTags;
  });

  displayActivities(filtered);
}

function displayActivities(list) {
  const container = document.getElementById("activityList");
  container.innerHTML = "";

  list.forEach(a => {
    const card = document.createElement("div");

    // Determine first tag for color
    let firstTag = null;
    for (const cat of categories) {
      if (a[cat]) {
        firstTag = normalizeTag(a[cat]);
        break;
      }
    }

    card.className = `activity-card card-${firstTag}`;

    // Title
    const title = document.createElement("h4");
    title.textContent = a["Activity Name"];
    card.appendChild(title);

    // Description
    const desc = document.createElement("p");
    desc.textContent = a["Description"];
    card.appendChild(desc);

    // Tags at bottom
    const tagList = document.createElement("div");
    tagList.className = "tag-list";
    const tags = categories
      .filter(cat => a[cat])
      .map(cat => a[cat]);
    tagList.textContent = tags.join(", ");
    card.appendChild(tagList);

    container.appendChild(card);
  });
}

// Search input triggers filter immediately
document.getElementById("searchInput").addEventListener("input", filterActivities);

loadActivities();
